// Mocks generated by Mockito 5.1.0 from annotations
// in todo_list_bloc/test/todo_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_list_bloc/scr/home/model/tarefa.dart' as _i4;
import 'package:todo_list_bloc/scr/service/persistence_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [DataPersistenceService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataPersistenceService extends _i1.Mock
    implements _i2.DataPersistenceService {
  MockDataPersistenceService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> clear() => (super.noSuchMethod(Invocation.method(#clear, []),
      returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> persist(List<_i4.Tarefa>? todoList) =>
      (super.noSuchMethod(Invocation.method(#persist, [todoList]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<List<_i4.Tarefa>> read() =>
      (super.noSuchMethod(Invocation.method(#read, []),
              returnValue: Future<List<_i4.Tarefa>>.value(<_i4.Tarefa>[]))
          as _i3.Future<List<_i4.Tarefa>>);
}
